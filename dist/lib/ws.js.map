{"version":3,"sources":["lib/ws.js"],"names":[],"mappings":";;AACA,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,IAAI,eAAe,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;AAClD,IAAI,MAAM,GAAI,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;;AAElD,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;;AAGlC,IAAI,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC3C,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;;AAErD,IAAI,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACtD,IAAI,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;;AAI5D,SAAS,EAAE,CAAC,MAAM,EAAC;AAClB,KAAI,IAAI,GAAG,IAAI,CAAC;AAChB,KAAI,OAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,KAAI,EAAE,GAAG,IAAI,eAAe,CAAC;AACzB,YAAU,EAAE,MAAM;AAClB,uBAAqB,EAAE,KAAK;EAC/B,CAAC,CAAC;;AAEH,GAAE,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,OAAO,EAAE;AAChC,QAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAClC,MAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AACtD,YAAU,CAAC,OAAO,GAAG,EAAE,CAAC;AACxB,YAAU,CAAC,UAAU,GAAG,UAAS,MAAM,EAAE,IAAI,EAAC;AAC7C,aAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;AAC5D,UAAO,IAAI,CAAC;GACZ,CAAC;;AAEF,YAAU,CAAC,SAAS,GAAG,UAAS,OAAO,EAAE,IAAI,EAAC;AAC7C,aAAU,CAAC,UAAU,CAAC,OAAO,EAAE,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,EAAC,IAAI,EAAC,CAAC,CAAC;GAC7D,CAAC;;AAEF,YAAU,CAAC,WAAW,GAAG,oBAAe,GAAG,EAAE,GAAG;;;;AAC/C,aAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,gBAAU,CAAC,OAAO,CAAC,QAAQ,GAAC,CAAC,CAAC;;UAC1B,UAAU,CAAC,OAAO,CAAC,QAAQ;;;;;YAAO,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;AACxG,aAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;aACP,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;;;;;;;;;;GAC3E,CAAC;;AAEF,SAAO,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;EAClC,CAAC,CAAC;;AAEH,KAAI,CAAC,OAAO,GAAG,UAAS,CAAC,EAAC;AACzB,SAAO,CAAC,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;AACtB,SAAO,IAAI,CAAC;EACZ,CAAC;CAGF;;AAED,MAAM,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC","file":"lib/ws.js","sourcesContent":["\nvar server = require(\"./server\");\nvar WebSocketServer = require('websocket').server;\nvar logger  = require('./logger');\nvar EventEmitter = require('events').EventEmitter;\n\nvar redis = require('redis');\nvar client = redis.createClient();\n\n \nvar proximity = require('redis-proximity');\nproximity.initialize(client, \"connections-position\");\n\nvar addCoordinate = asyncify(proximity.addCoordinate);\nvar removeCoordinate = asyncify(proximity.removeCoordinate);\n\n\n\nfunction WS(server){\n\tvar self = this;\n\tvar emitter = new EventEmitter();\n\tvar ws = new WebSocketServer({\n    \thttpServer: server,\n    \tautoAcceptConnections: false\n\t});\n\n\tws.on('request', function(request) {\n  \t\tlogger.debug(\"request started\");\n\t\tvar connection = request.accept(null, request.origin);\n\t\tconnection.session = {};\n\t\tconnection.sendAction = function(action, data){\n\t\t\tconnection.send(JSON.stringify({action:action, data:data}));\n\t\t\treturn self;\n\t\t};\n\n\t\tconnection.sendError = function(message, code){\n\t\t\tconnection.sendAction(\"Error\", {message:message, code:code});\n\t\t};\n\n\t\tconnection.addPosition = async function(lat, lon){\n\t\t\tconsole.log(\"add1\");\n\t\t\tconnection.session.deviceId=1;\n\t\t\tif(!connection.session.deviceId)throw new Error(\"Cannot add coordinates to connection without deviceId\");\n\t\t\tconsole.log(\"add2\");\n\t\t\treturn await proximity.addCoordinate(lat, lon, connection.session.deviceId);\n\t\t};\n\n\t\temitter.emit(\"start\", connection);\n\t});\n\n\tthis.request = function(f){\n\t\temitter.on(\"start\",f);\n\t\treturn self;\n\t};\n\n\n}\n\nmodule.exports = new WS(server.server);"],"sourceRoot":"/source/"}